function fillRepeating(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingInt8(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingInt16(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingInt32(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingUint8Clamped(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingUInt8(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingUInt16(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingUInt32(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingFloat32(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingFloat64(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingBigUint64(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}function fillRepeatingBigInt64(dstBuffer,start,end){let len=dstBuffer.length,sLen=end-start,p=sLen;for(;p<len;)p+sLen>len&&(sLen=len-p),dstBuffer.copyWithin(p,start,sLen),p+=sLen,sLen<<=1}export{fillRepeating,fillRepeatingBigInt64,fillRepeatingBigUint64,fillRepeatingFloat32,fillRepeatingFloat64,fillRepeatingInt16,fillRepeatingInt32,fillRepeatingInt8,fillRepeatingUInt16,fillRepeatingUInt32,fillRepeatingUInt8,fillRepeatingUint8Clamped};
